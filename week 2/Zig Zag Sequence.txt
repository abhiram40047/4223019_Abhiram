#include <stdio.h>
#include <stdlib.h>

static int compareAsc(const void *p, const void *q) {
    int left = *(const int *)p;
    int right = *(const int *)q;
    return (left > right) - (left < right);
}

int main(void) {
    int testCases;
    if (scanf("%d", &testCases) != 1) return 0;

    while (testCases--) {
        int size;
        scanf("%d", &size);

        int *nums = (int *)malloc(size * sizeof(int));
        for (int idx = 0; idx < size; idx++) {
            scanf("%d", &nums[idx]);
        }

        // Step 1: sort in ascending order
        qsort(nums, size, sizeof(int), compareAsc);

        // Step 2: swap middle element with last
        int middle = (size - 1) / 2;
        int temp = nums[middle];
        nums[middle] = nums[size - 1];
        nums[size - 1] = temp;

        // Step 3: reverse second half (middle+1 to size-2)
        int left = middle + 1, right = size - 2;
        while (left < right) {
            int swapVal = nums[left];
            nums[left] = nums[right];
            nums[right] = swapVal;
            left++;
            right--;
        }

        // Step 4: print result
        for (int p = 0; p < size; p++) {
            if (p > 0) printf(" ");
            printf("%d", nums[p]);
        }
        printf("\n");

        free(nums);
    }
    return 0;
}
